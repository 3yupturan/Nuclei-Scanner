package model

import "github.com/projectdiscovery/nuclei/v3/pkg/utils/schema"

// infoSectionMetadata contains all metadata information about Info struct
var infoSectionMetadata = []schema.PropertyMetadata{
	{
		PropName: "name",
		PropType: "string",
		Description: schema.MultiLine(
			"Name should be good short summary that identifies what the template does",
		),
		Example: schema.PropertyExamples("example-template", "TeamCity - Authentication Bypass"),
	},
	{
		PropName:  "author",
		RemoveRef: true,
		OneOf: []*schema.PropertyMetadata{
			{
				PropType: "string",
				Description: schema.MultiLine(
					"Author of the template without any special characters",
					"It can be a single author or comma-separated multiple authors",
				),
				Example: schema.PropertyExample("pdteam"),
			},
			{
				PropType: "array",
				Description: schema.MultiLine(
					"Author of the template without any special characters",
					"It can be a single author or comma-separated multiple authors",
				),
				Example: schema.PropertyExample("pdteam,mr.robot"),
			},
		},
	},
	{
		PropName:  "tags",
		RemoveRef: true,
		OneOf: []*schema.PropertyMetadata{
			{
				PropType: "string",
				Description: schema.MultiLine(
					"Tags for the template separated by commas (No spaces)",
				),
				Example: schema.PropertyExample("cve"),
			},
			{
				PropType: "array",
				Description: schema.MultiLine(
					"Multiple tags for the template separated by commas (No spaces)",
				),
				Example: schema.PropertyExamples("cve,http", "http,oast", "cve2024,cve"),
			},
		},
	},
	{
		PropName: "description",
		PropType: "string",
		Description: schema.MultiLine(
			"Description of the template.",
			"You can go in-depth here on what the template actually does.",
			"Example:",
			"Apache Log4j2 <=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.",
		),
		Example: schema.PropertyExample("Example description of the template"),
	},
	{
		PropName: "impact",
		PropType: "string",
		Description: schema.MultiLine(
			"Impact of the template.",
			"You can go in-depth here on impact of the template.",
			"Example:",
			"Successful exploitation of this vulnerability can lead to remote code execution, potentially compromising the affected system.",
		),
		Example: schema.PropertyExample("Impact of the template"),
	},
	{
		PropName: "reference",
		PropType: "array",
		Description: schema.MultiLine(
			"References for the template.",
			"This should contain links relevant to the template.",
			"Example:",
			"https://logging.apache.org/log4j/2.x/security.html",
			"https://nvd.nist.gov/vuln/detail/CVE-2021-44228",
		),
		Example: schema.PropertyExample("\n\t- https://example.com"),
	},
	{
		PropName: "severity",
		Description: schema.MultiLine(
			"Severity of the template.",
			"supported values: info, low, medium, high, critical, unknown",
		),
		Example: schema.PropertyExample("info"),
	},
	{
		PropName: "metadata",
		Description: schema.MultiLine(
			"Optional metadata for the template.",
			"this could be any useful metadata like Vendor, Product, Version, etc.",
			"Note - This is autogenerated and updated regularly for templates merged in projectdiscovery/nuclei-templates repository.",
			"Example:",
			"```yaml",
			"Vendor: Apache",
			"Product: Log4j2",
			"Version: <=2.14.1",
			"```",
		),
		Example: schema.PropertyExamples(
			schema.MultiLine(
				"\n\tmax-request: 1",
			),
			schema.MultiLine(
				"\n\tmax-request: 2",
				"\tvendor: apache",
				"\tproduct: log4j2",
			),
		),
	},
	{
		PropName: "classification",
		Description: schema.MultiLine(
			"Classification contains classification information about the template.",
			"This could be any classification information like CWE, CVE, EPSS etc.",
			"Note - This is autogenerated and updated regularly for CVE templates merged in projectdiscovery/nuclei-templates repository.",
			"Example:",
			"```yaml",
			"cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
			"cvss-score: 10",
			"cve-id: CVE-2021-44228",
			"cwe-id: CWE-20,CWE-917",
			"epss-score: 0.97453",
			"epss-percentile: 0.99942",
			"cpe: cpe:2.3:a:apache:log4j:*:*:*:*:*:*:*:*",
			"```",
		),
		Example: schema.PropertyExamples(
			schema.MultiLine(
				"\n\tcvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
				"\tcvss-score: 10",
				"\tcve-id: CVE-2021-44228",
			),
			schema.MultiLine(
				"\n\tcwe-id: CWE-20,CWE-917",
			),
		),
	},
	{
		PropName: "Remediation",
		PropType: "string",
		Description: schema.MultiLine(
			"Remediation steps for the template.",
			"You can go in-depth here on how to mitigate the problem found by this template.",
			"Example:",
			"Upgrade to Log4j 2.3.1 (for Java 6), 2.12.3 (for Java 7), or 2.17.0 (for Java 8 and later).",
		),
		Example: schema.PropertyExample("Remediation steps for the template"),
	},
}

// infoSectionExamples contains examples for Info struct
var infoSectionExamples = schema.PropertyExamples(
	schema.MultiLine(
		"\n\tname: Example Template",
		"\tauthor: pdteam",
		"\tseverity: info",
		"\tdescription: This is an example template",
	),
	schema.MultiLine(
		"\n\tname: example-template",
		"\tauthor: pdteam",
		"\tseverity: unknown",
		"\tdescription: Example description of the template",
		"\timpact: Impact of the template",
		"\treference: ",
		"\t  - https://example.com",
		"\tmetadata: ",
		"\t  max-request: 1",
		"\ttags: http",
	),
)
